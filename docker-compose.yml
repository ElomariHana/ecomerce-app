services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
    networks:
      - microservices-net
    volumes:
      - postgres-data:/var/lib/postgresql/data
  api-gateway:
    build: ./api-getway
    container_name: api-gateway
    ports:
      - "8085:8085"
    depends_on:
      - discovery-service
    networks:
      - microservices-net
    environment:
      SPRING_PROFILES_ACTIVE: docker
  discovery-service:
    build: ./discovery-service
    container_name: discovery-service
    ports:
      - "8761:8761"
    networks:
      - microservices-net
    environment:
     SPRING_PROFILES_ACTIVE: docker
  user:
    build: ./user-service
    container_name: user
    ports:
      - "8082:8082"
    depends_on:
      - discovery-service
      - postgres
    networks:
      - microservices-net
    environment:
      SPRING_PROFILES_ACTIVE: docker
  shop:
    build: ./shop-service
    container_name: shop
    ports:
      - "8081:8081"
    depends_on:
      - discovery-service
      - postgres
    networks:
      - microservices-net
    environment:
      SPRING_PROFILES_ACTIVE: docker
  product:
    build: ./product-service
    container_name: product
    ports:
      - "8080:8080"
    depends_on:
      - discovery-service
      - postgres
    networks:
      - microservices-net
    environment:
      SPRING_PROFILES_ACTIVE: docker
      
  # Keycloak Identity and Access Management
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: yourpassword
    command: start-dev
    depends_on:
      - postgres
    networks:
      - microservices-net
    volumes:
      - keycloak-data:/opt/keycloak/data

volumes:
  postgres-data:
  keycloak-data:
networks:
  microservices-net:
    driver: bridge